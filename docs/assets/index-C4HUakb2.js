import c from"https://cdn.jsdelivr.net/npm/leaflet@1.9.4/+esm";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(n){if(n.ep)return;n.ep=!0;const s=t(n);fetch(n.href,s)}})();const R="modulepreload",C=function(r){return"/"+r},k={},N=function(e,t,i){let n=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),o=(a==null?void 0:a.nonce)||(a==null?void 0:a.getAttribute("nonce"));n=Promise.allSettled(t.map(d=>{if(d=C(d),d in k)return;k[d]=!0;const m=d.endsWith(".css"),w=m?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${d}"]${w}`))return;const h=document.createElement("link");if(h.rel=m?"stylesheet":R,m||(h.as="script"),h.crossOrigin="",h.href=d,o&&h.setAttribute("nonce",o),document.head.appendChild(h),m)return new Promise((D,T)=>{h.addEventListener("load",D),h.addEventListener("error",()=>T(new Error(`Unable to preload CSS for ${d}`)))})}))}function s(a){const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=a,window.dispatchEvent(o),!o.defaultPrevented)throw a}return n.then(a=>{for(const o of a||[])o.status==="rejected"&&s(o.reason);return e().catch(s)})},y={BASE_URL:"https://story-api.dicoding.dev/v1"},p={REGISTER:`${y.BASE_URL}/register`,LOGIN:`${y.BASE_URL}/login`,STORIES:`${y.BASE_URL}/stories`,STORIES_GUEST:`${y.BASE_URL}/stories/guest`,SUBSCRIBE:`${y.BASE_URL}/notifications/subscribe`},f={"Content-Type":"application/json"};async function B({name:r,email:e,password:t}){const i=await fetch(p.REGISTER,{method:"POST",headers:f,body:JSON.stringify({name:r,email:e,password:t})});if(!i.ok)throw new Error("Registration failed");return await i.json()}async function I({email:r,password:e}){var n;const t=await fetch(p.LOGIN,{method:"POST",headers:f,body:JSON.stringify({email:r,password:e})});if(!t.ok)throw new Error("Login failed");const i=await t.json();return(n=i.loginResult)!=null&&n.token&&localStorage.setItem("token",i.loginResult.token),i}async function P(r=1,e=10,t=1){const i=localStorage.getItem("token"),n={...f};i&&(n.Authorization=`Bearer ${i}`);const s=new URLSearchParams({page:r,size:e,location:t}),a=await fetch(`${p.STORIES}?${s}`,{headers:n});if(!a.ok)throw new Error("Failed to fetch stories");return await a.json()}async function v({description:r,photo:e,lat:t,lon:i},n=!1){const s=localStorage.getItem("token"),a=new FormData;a.append("description",r),e&&a.append("photo",e),t&&i&&(a.append("lat",t),a.append("lon",i));const o={};!n&&s&&(o.Authorization=`Bearer ${s}`);const d=n?p.STORIES_GUEST:p.STORIES,m=await fetch(d,{method:"POST",headers:o,body:a});if(!m.ok)throw new Error("Failed to add story");const w=await m.json();return w.storyId=Date.now().toString(),w}async function A(r,e){const t=localStorage.getItem("token"),i=await fetch(p.SUBSCRIBE,{method:"POST",headers:{...f,Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({endpoint:r,keys:{p256dh:e.p256dh,auth:e.auth}})});if(!i.ok)throw new Error("Failed to subscribe");return await i.json()}async function x(r){const e=localStorage.getItem("token"),t=await fetch(p.SUBSCRIBE,{method:"DELETE",headers:{...f,Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify({endpoint:r})});if(!t.ok)throw new Error("Failed to unsubscribe");return await t.json()}function O(){localStorage.removeItem("token")}function l(){return!!localStorage.getItem("token")}const $=Object.freeze(Object.defineProperty({__proto__:null,addStory:v,getStories:P,isAuthenticated:l,login:I,logout:O,register:B,subscribePush:A,unsubscribePush:x},Symbol.toStringTag,{value:"Module"}));function M(r,e="id-ID",t={}){return new Date(r).toLocaleDateString(e,{year:"numeric",month:"long",day:"numeric",...t})}function E(r=300){return new Promise(e=>setTimeout(e,r))}async function q(r,e=300){return new Promise(t=>{r.style.transition=`opacity ${e}ms ease-out, transform ${e}ms ease-out`,r.style.opacity="0",r.style.transform="translateY(10px)",setTimeout(t,e)})}async function g(r,e=300){r.style.opacity="0",r.style.transform="translateY(-10px)",r.style.transition=`opacity ${e}ms ease-in, transform ${e}ms ease-in`,r.style.display="block",await E(10),r.style.opacity="1",r.style.transform="translateY(0)",await E(e)}function F(r){const e="=".repeat((4-r.length%4)%4),t=(r+e).replace(/-/g,"+").replace(/_/g,"/"),i=window.atob(t),n=new Uint8Array(i.length);for(let s=0;s<i.length;++s)n[s]=i.charCodeAt(s);return n}function u(r){r.addEventListener("keydown",e=>{(e.key==="Enter"||e.key===" ")&&(e.preventDefault(),r.click())})}class V{async render(){const e=l()?"sudah login":"belum login";return`
      <section class="container" role="main" aria-labelledby="home-title">
        <a href="#main-content" class="skip-link">Skip to content</a>
        <h1 id="home-title">Selamat Datang di Dicoding Story</h1>
        <p>Bagikan cerita Anda! ${e?`Anda ${e}.`:"Silakan login atau lanjut sebagai guest."}</p>
        <div class="home-actions">
          <a href="#/stories" class="btn" tabindex="0">Lihat Cerita</a>
          <a href="#/add-story" class="btn ${l()?"":"disabled"}" tabindex="${l()?0:-1}">Tambah Cerita</a>
          <button id="toggle-push" class="btn" tabindex="0">Aktifkan Notifikasi</button>
        </div>
      </section>
    `}afterRender(e){var i;l()||(i=document.querySelector(".home-actions .btn:nth-child(2)"))==null||i.setAttribute("aria-disabled","true");const t=document.getElementById("toggle-push");u(t),t.addEventListener("click",()=>e.onTogglePush()),g(document.querySelector(".container"))}updateToggleButton(e){document.getElementById("toggle-push").textContent=e}}class _{constructor(e){this.view=e,this.isSubscribed=!1}async afterRender(){this.view.afterRender(this),await this.checkSubscription()}async checkSubscription(){if(!l()||!("serviceWorker"in navigator))return;const t=await(await navigator.serviceWorker.ready).pushManager.getSubscription();this.isSubscribed=!!t,this.view.updateToggleButton(this.isSubscribed?"Nonaktifkan Notifikasi":"Aktifkan Notifikasi")}async onTogglePush(){if(!l())return;const e=await navigator.serviceWorker.ready;if(this.isSubscribed){const t=await e.pushManager.getSubscription();await x(t.endpoint),await t.unsubscribe()}else{const t=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:F(CONFIG.VAPID_PUBLIC_KEY)});await A(t.endpoint,t.toJSON().keys)}this.isSubscribed=!this.isSubscribed,this.view.updateToggleButton(this.isSubscribed?"Nonaktifkan Notifikasi":"Aktifkan Notifikasi")}}class U{constructor(){this.view=new V,this.presenter=new _(this.view)}async render(){return this.view.render()}}class j{async render(){return`
      <section class="container" role="main" aria-labelledby="about-title">
        <a href="#main-content" class="skip-link">Skip to content</a>
        <h1 id="about-title">Tentang Dicoding Story</h1>
        <p>Aplikasi untuk berbagi cerita seputar Dicoding. Dibangun dengan Vanilla JS dan Webpack.</p>
      </section>
    `}async afterRender(){const e=document.querySelector(".container");await g(e)}}class W{constructor(e){this.view=e}async afterRender(e){await e.afterRender()}}class G{constructor(){this.view=new j,this.presenter=new W(this.view)}async render(){return this.view.render()}}class z{constructor(){this.map=null,this.markers=c.layerGroup(),this.baseLayers={OpenStreetMap:c.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"),Satellite:c.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}")}}async render(){return`
      <section class="container" role="main" aria-labelledby="stories-title">
        <a href="#main-content" class="skip-link">Skip to content</a>
        <h1 id="stories-title">Daftar Cerita</h1>
        <div class="filter-controls">
          <input type="text" id="search-input" placeholder="Cari cerita..." aria-label="Cari cerita">
          <select id="sort-select" aria-label="Urutkan cerita">
            <option value="newest">Terbaru</option>
            <option value="oldest">Terlama</option>
          </select>
          <label>
            <input type="checkbox" id="location-filter" checked> Tampilkan dengan lokasi
          </label>
        </div>
        <div class="stories-grid" id="stories-grid" role="list" aria-label="Daftar cerita"></div>
        <div id="map-container" class="map-container" role="region" aria-label="Peta cerita" tabindex="0">
          <div id="map" style="height: 400px;"></div>
          <div id="layer-control"></div>
        </div>
      </section>
    `}afterRender(e,t=[]){this.renderStoriesGrid(t),this.initMap(),this.bindEvents(e),u(document.getElementById("map-container")),g(document.querySelector(".container"))}renderStoriesGrid(e){const t=document.getElementById("stories-grid"),i=this.sortStories(e,document.getElementById("sort-select").value),n=this.filterStories(i);t.innerHTML=n.map(s=>`
      <article class="story-card" role="listitem" tabindex="0" data-id="${s.id}" data-lat="${s.lat}" data-lon="${s.lon}">
        <img src="${s.photoUrl}" alt="${s.description.substring(0,100)}..." loading="lazy">
        <h2>${s.name}</h2>
        <p>${s.description}</p>
        <time datetime="${s.createdAt}">${s.createdAt}</time> <!-- Use showFormattedDate in presenter -->
      </article>
    `).join("")}sortStories(e,t){return[...e].sort((i,n)=>{const s=new Date(i.createdAt),a=new Date(n.createdAt);return t==="newest"?a-s:s-a})}filterStories(e){const t=document.getElementById("search-input").value.toLowerCase(),i=document.getElementById("location-filter").checked;return e.filter(n=>n.description.toLowerCase().includes(t)&&(!i||n.lat&&n.lon))}initMap(){this.map=c.map("map").setView([-.789275,119.95],5),this.baseLayers.OpenStreetMap.addTo(this.map),c.control.layers(this.baseLayers).addTo(this.map),this.markers.addTo(this.map)}addMarkersToMap(e){this.markers.clearLayers(),this.filterStories(e).forEach(i=>{if(i.lat&&i.lon){const n=c.marker([i.lat,i.lon]).bindPopup(`
          <b>${i.name}</b><br>
          ${i.description}<br>
          <img src="${i.photoUrl}" alt="${i.description}" style="max-width:100px;">
        `);n.addTo(this.markers),n.on("click",()=>this.highlightStory(i.id))}})}highlightStory(e){document.querySelectorAll(".story-card").forEach(i=>i.classList.remove("highlighted"));const t=document.querySelector(`[data-id="${e}"]`);t&&(t.classList.add("highlighted"),t.focus())}bindEvents(e){document.getElementById("search-input").addEventListener("input",()=>e.onFilter()),document.getElementById("sort-select").addEventListener("change",()=>e.onFilter()),document.getElementById("location-filter").addEventListener("change",()=>e.onFilter()),document.getElementById("stories-grid").addEventListener("click",t=>{const i=t.target.closest(".story-card");if(i){const n=parseFloat(i.dataset.lat),s=parseFloat(i.dataset.lon);this.map.setView([n,s],10),this.highlightStory(i.dataset.id)}}),document.getElementById("stories-grid").addEventListener("keydown",t=>{if(t.key==="Enter"||t.key===" "){t.preventDefault();const i=t.target.closest(".story-card");i&&i.click()}}),document.getElementById("map-container").addEventListener("keydown",t=>{(t.key==="Enter"||t.key===" ")&&this.map.invalidateSize()})}updateStories(e){this.renderStoriesGrid(e),this.addMarkersToMap(e)}}class H{constructor(e){this.view=e,this.stories=[]}async afterRender(){if(!l()){window.location.hash="/login";return}await this.loadStories(),this.view.afterRender(this,this.stories)}async loadStories(){try{const{listStory:e}=await P(1,10,1);this.stories=e.map(t=>({...t,formattedDate:M(t.createdAt)})),this.view.updateStories(this.stories)}catch(e){console.error(e),document.getElementById("stories-grid").innerHTML="<p>Failed to load stories.</p>"}}onFilter(){this.view.renderStoriesGrid(this.stories),this.view.addMarkersToMap(this.stories)}}class K{constructor(){this.view=new z,this.presenter=new H(this.view)}async render(){return this.view.render()}}class J{constructor(){this.map=null,this.selectedLat=null,this.selectedLon=null,this.stream=null,this.video=null,this.canvas=null}async render(){return`
      <section class="container" role="main" aria-labelledby="add-title">
        <a href="#main-content" class="skip-link">Skip to content</a>
        <h1 id="add-title">Tambah Cerita Baru</h1>
        <form id="add-story-form" class="form-container">
          <label for="description">Deskripsi:</label>
          <textarea id="description" required aria-describedby="desc-error" maxlength="200"></textarea>
          <div id="desc-error" role="alert"></div>

          <label for="photo">Foto:</label>
          <input type="file" id="photo" accept="image/*" aria-describedby="photo-error">
          <button type="button" id="camera-btn" tabindex="0">Ambil dari Kamera</button>
          <video id="video" style="display:none;" autoplay muted></video>
          <canvas id="canvas" style="display:none;"></canvas>
          <div id="photo-error" role="alert"></div>

          <label>Klik peta untuk pilih lokasi:</label>
          <div id="map-container" class="map-container" style="height:300px;" role="region" aria-label="Pilih lokasi" tabindex="0"></div>

          <button type="submit" class="btn" tabindex="0">Kirim Cerita</button>
          <div id="form-message" role="alert"></div>
        </form>
      </section>
    `}afterRender(){this.form=document.getElementById("add-story-form"),this.initMap(),this.initCamera(),u(document.getElementById("camera-btn")),u(document.getElementById("map-container")),u(this.form.querySelector('button[type="submit"]'))}initMap(){this.map=c.map("map-container").setView([-.789275,119.95],5),c.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png").addTo(this.map),this.map.on("click",e=>{this.selectedLat=e.latlng.lat,this.selectedLon=e.latlng.lng,c.marker([this.selectedLat,this.selectedLon]).addTo(this.map).bindPopup("Lokasi dipilih").openPopup()})}initCamera(){this.video=document.getElementById("video"),this.canvas=document.getElementById("canvas"),this.cameraBtn=document.getElementById("camera-btn"),this.cameraBtn.addEventListener("click",()=>this.startCamera())}async startCamera(){try{this.stream=await navigator.mediaDevices.getUserMedia({video:!0}),this.video.srcObject=this.stream,this.video.style.display="block",this.cameraBtn.textContent="Hentikan Kamera";const e=document.createElement("button");e.textContent="Ambil Foto",e.type="button",e.tabIndex=0,u(e),this.form.appendChild(e),e.addEventListener("click",()=>this.capturePhoto())}catch{document.getElementById("photo-error").textContent="Kamera tidak tersedia."}}capturePhoto(){this.canvas.width=this.video.videoWidth,this.canvas.height=this.video.videoHeight,this.canvas.getContext("2d").drawImage(this.video,0,0),this.canvas.toBlob(e=>{const t=new File([e],"captured.jpg",{type:"image/jpeg"}),i=new DataTransfer;i.items.add(t),document.getElementById("photo").files=i.files}),this.stopCamera()}stopCamera(){this.stream&&(this.stream.getTracks().forEach(e=>e.stop()),this.stream=null),this.video.style.display="none",this.canvas.style.display="none",this.cameraBtn.textContent="Ambil dari Kamera"}getFormData(){const e=document.getElementById("description").value,t=document.getElementById("photo");return{description:e,photo:t.files[0]||null,lat:this.selectedLat,lon:this.selectedLon}}showMessage(e,t=!1){const i=document.getElementById("form-message");i.textContent=e,i.className=t?"error":"success"}resetForm(){this.form.reset(),this.stopCamera(),this.map&&this.map.eachLayer(e=>{e instanceof c.Marker&&this.map.removeLayer(e)}),this.selectedLat=null,this.selectedLon=null}bindEvents(e){this.form.addEventListener("submit",t=>{t.preventDefault(),e.onSubmit()}),document.getElementById("description").addEventListener("input",t=>{t.target.value.length<5?document.getElementById("desc-error").textContent="Deskripsi minimal 5 karakter.":document.getElementById("desc-error").textContent=""}),document.getElementById("map-container").addEventListener("keydown",t=>{if(t.key==="Enter"){const i=this.map.getCenter();this.selectedLat=i.lat,this.selectedLon=i.lng,c.marker([this.selectedLat,this.selectedLon]).addTo(this.map).bindPopup("Lokasi dipilih").openPopup()}})}}class Y{constructor(){this.dbName="StoryDB",this.storeName="offlineStories"}async init(){return new Promise((e,t)=>{const i=indexedDB.open(this.dbName,1);i.onupgradeneeded=n=>{const s=n.target.result;s.objectStoreNames.contains(this.storeName)||s.createObjectStore(this.storeName,{keyPath:"id",autoIncrement:!0})},i.onsuccess=()=>e(i.result),i.onerror=()=>t(i.error)})}async addStory(e){const t=await this.init();return new Promise((i,n)=>{const o=t.transaction([this.storeName],"readwrite").objectStore(this.storeName).add({...e,timestamp:Date.now()});o.onsuccess=()=>i(o.result),o.onerror=()=>n(o.error)})}async getAllStories(){const e=await this.init();return new Promise((t,i)=>{const a=e.transaction([this.storeName],"readonly").objectStore(this.storeName).getAll();a.onsuccess=()=>t(a.result),a.onerror=()=>i(a.error)})}async deleteStory(e){const t=await this.init();return new Promise((i,n)=>{const o=t.transaction([this.storeName],"readwrite").objectStore(this.storeName).delete(e);o.onsuccess=()=>i(),o.onerror=()=>n(o.error)})}}const b=new Y;async function L(){return navigator.onLine}window.addEventListener("online",()=>{console.log("Back online")});window.addEventListener("offline",()=>{console.log("Offline")});class Q{constructor(e){this.view=e,this.isSubscribed=!1}async afterRender(){if(!l()){window.location.hash="/login";return}this.view.afterRender(),this.view.bindEvents(this),this.checkSubscription(),await g(document.querySelector(".container"))}async checkSubscription(){if("serviceWorker"in navigator){const t=await(await navigator.serviceWorker.ready).pushManager.getSubscription();this.isSubscribed=!!t}}async onSubmit(){const e=this.view.getFormData();if(!e.description||e.description.length<5||!e.photo){this.view.showMessage("Lengkapi form dengan valid.",!0);return}try{let t;if(await L())t=await v(e,!1),this.view.showMessage("Cerita berhasil ditambahkan!"),this.isSubscribed&&(await navigator.serviceWorker.ready).active.postMessage({type:"PUSH_NOTIFICATION",data:{title:"Story berhasil dibuat",options:{body:`Anda telah membuat story baru dengan deskripsi: ${e.description}`},storyId:t.storyId}});else{const i=await b.addStory(e);this.view.showMessage("Cerita disimpan offline, akan disinkronkan saat online.")}this.view.resetForm(),this.syncOfflineStories()}catch(t){this.view.showMessage(`Error: ${t.message}`,!0)}}async syncOfflineStories(){if(!await L())return;const e=await b.getAllStories();for(const t of e)try{await v(t,!1),await b.deleteStory(t.id)}catch(i){console.error("Sync failed:",i)}}}class X{constructor(){this.view=new J,this.presenter=new Q(this.view)}async render(){return this.view.render()}}class Z{async render(){return`
      <section class="container" role="main" aria-labelledby="login-title">
        <a href="#main-content" class="skip-link">Skip to content</a>
        <h1 id="login-title">Login</h1>
        <form id="login-form" class="form-container">
          <label for="email">Email:</label>
          <input type="email" id="email" required aria-describedby="email-error" tabindex="0">

          <label for="password">Password:</label>
          <input type="password" id="password" required aria-describedby="password-error" tabindex="0">
          <button type="button" id="toggle-password" tabindex="0">Tampilkan Password</button>
          <div id="password-error" role="alert"></div>

          <button type="submit" class="btn" tabindex="0">Login</button>
          <div id="login-message" role="alert"></div>
          <p>Belum punya akun? <a href="#/register" tabindex="0">Daftar</a></p>
        </form>
      </section>
    `}afterRender(e){this.form=document.getElementById("login-form"),this.bindEvents(e),u(document.getElementById("toggle-password")),u(this.form.querySelector('button[type="submit"]')),g(document.querySelector(".container"))}bindEvents(e){this.form.addEventListener("submit",async t=>{t.preventDefault(),e.onSubmit()}),document.getElementById("toggle-password").addEventListener("click",()=>{const t=document.getElementById("password");t.type=t.type==="password"?"text":"password"})}getFormData(){return{email:document.getElementById("email").value,password:document.getElementById("password").value}}showMessage(e,t=!1){const i=document.getElementById("login-message");i.textContent=e,i.className=t?"error":"success"}}class ee{constructor(e){this.view=e}async afterRender(){this.view.afterRender(this)}async onSubmit(){const{email:e,password:t}=this.view.getFormData();if(!e||!t){this.view.showMessage("Lengkapi form.",!0);return}try{await I({email:e,password:t}),window.location.hash="/stories"}catch(i){this.view.showMessage(`Error: ${i.message}`,!0)}}}class te{constructor(){this.view=new Z,this.presenter=new ee(this.view)}async render(){return this.view.render()}}class ie{async render(){return`
      <section class="container" role="main" aria-labelledby="register-title">
        <a href="#main-content" class="skip-link">Skip to content</a>
        <h1 id="register-title">Daftar</h1>
        <form id="register-form" class="form-container">
          <label for="name">Nama:</label>
          <input type="text" id="name" required aria-describedby="name-error" tabindex="0">

          <label for="email">Email:</label>
          <input type="email" id="email" required aria-describedby="email-error" tabindex="0">

          <label for="password">Password (min 8 char):</label>
          <input type="password" id="password" required minlength="8" aria-describedby="password-error" tabindex="0">
          <div id="password-error" role="alert"></div>

          <button type="submit" class="btn" tabindex="0">Daftar</button>
          <div id="register-message" role="alert"></div>
          <p>Sudah punya akun? <a href="#/login" tabindex="0">Login</a></p>
        </form>
      </section>
    `}afterRender(e){this.form=document.getElementById("register-form"),this.bindEvents(e),u(this.form.querySelector('button[type="submit"]')),g(document.querySelector(".container"))}bindEvents(e){this.form.addEventListener("submit",async t=>{t.preventDefault(),e.onSubmit()})}getFormData(){return{name:document.getElementById("name").value,email:document.getElementById("email").value,password:document.getElementById("password").value}}showMessage(e,t=!1){const i=document.getElementById("register-message");i.textContent=e,i.className=t?"error":"success"}}class re{constructor(e){this.view=e}async afterRender(){this.view.afterRender(this)}async onSubmit(){const{name:e,email:t,password:i}=this.view.getFormData();if(i.length<8){document.getElementById("password-error").textContent="Password minimal 8 karakter.";return}try{await B({name:e,email:t,password:i}),this.view.showMessage("Daftar berhasil! Silakan login."),window.location.hash="/login"}catch(n){this.view.showMessage(`Error: ${n.message}`,!0)}}}class ne{constructor(){this.view=new ie,this.presenter=new re(this.view)}async render(){return this.view.render()}}const se={"/":new U,"/about":new G,"/stories":new K,"/add-story":new X,"/login":new te,"/register":new ne};class ae{constructor({content:e,drawerButton:t,navigationDrawer:i}){this.content=e,this.drawerButton=t,this.navigationDrawer=i,this.currentView=null,this.initNavigation(),this.updateNavAuthState()}async renderPage(){const e=this.getActiveRoute(),t=se[e];if(!t)return;this.currentView&&(await q(this.currentView),this.currentView.remove());const i=await t.view.render();this.content.innerHTML=i,this.currentView=this.content.querySelector(".container"),await g(this.currentView),this.content.focus(),await t.presenter.afterRender(t.view)}getActiveRoute(){return location.hash.slice(1)||"/"}initNavigation(){var e;this.drawerButton.addEventListener("click",()=>{this.navigationDrawer.classList.toggle("open"),this.drawerButton.setAttribute("aria-expanded",this.navigationDrawer.classList.contains("open"))}),window.addEventListener("hashchange",()=>{this.navigationDrawer.classList.remove("open"),this.drawerButton.setAttribute("aria-expanded","false")}),(e=document.getElementById("logout-link"))==null||e.addEventListener("click",t=>{t.preventDefault(),N(async()=>{const{logout:i}=await Promise.resolve().then(()=>$);return{logout:i}},void 0).then(({logout:i})=>{i(),window.location.hash="/",this.updateNavAuthState()})})}updateNavAuthState(){const e=document.querySelector('a[href="#/add-story"]'),t=document.querySelector('a[href="#/login"]'),i=document.querySelector('a[href="#/register"]'),n=document.getElementById("logout-link");l()?(e.style.display="block",t.style.display="none",i.style.display="none",n.style.display="block"):(e.style.display="none",t.style.display="block",i.style.display="block",n.style.display="none")}}const S=document.createElement("link");S.rel="stylesheet";S.href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css";document.head.appendChild(S);document.addEventListener("DOMContentLoaded",async()=>{if("serviceWorker"in navigator)try{const t=await navigator.serviceWorker.register("/sw.js");console.log("Service Worker registered");let i;window.addEventListener("beforeinstallprompt",n=>{n.preventDefault(),i=n})}catch(t){console.error("Service Worker registration failed:",t)}const r=new ae({content:document.querySelector("#main-content"),drawerButton:document.querySelector("#drawer-button"),navigationDrawer:document.querySelector("#navigation-drawer")});await r.renderPage(),window.addEventListener("hashchange",async()=>{await r.renderPage()});const e=document.querySelector(".skip-link");e&&(e.addEventListener("focus",()=>{e.style.top="6px"}),e.addEventListener("blur",()=>{e.style.top="-40px"}))});
